# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import Problem20_GeneratedSolution as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -1263
    module_0.trapRainWater(int_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.trapRainWater(none_type_0)
    assert var_0 == 0
    str_0 = "-$=h\x0bh7\n$fLn"
    var_1 = module_0.trapRainWater(str_0)
    assert var_1 == 0


def test_case_2():
    str_0 = "-$=h\x0bh7\n$fLn"
    var_0 = module_0.trapRainWater(str_0)
    assert var_0 == 0


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    var_0 = module_0.trapRainWater(none_type_0)
    assert var_0 == 0
    var_1 = module_0.trapRainWater(none_type_0)
    assert var_1 == 0
    var_2 = module_0.trapRainWater(list_0)
    assert var_2 == 0
    var_3 = module_0.trapRainWater(var_2)
    assert var_3 == 0
    var_4 = module_0.trapRainWater(list_0)
    var_5 = module_0.trapRainWater(none_type_0)
    bytes_0 = b"\xcfl\x9d\xa1\xdfL\x97\xb6~\xfb\xce\xd2)E\x95\xe7O6e"
    module_0.trapRainWater(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "_CU]|]9sp7G]"
    list_0 = [str_0, str_0, str_0, str_0]
    bool_0 = False
    tuple_0 = (str_0, list_0, bool_0, list_0)
    module_0.trapRainWater(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "_CU]|]9sp7G]"
    list_0 = [str_0, str_0, str_0, str_0]
    module_0.trapRainWater(list_0)
