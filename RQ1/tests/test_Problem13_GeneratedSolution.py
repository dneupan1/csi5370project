# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import Problem13_GeneratedSolution as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 1030
    module_0.pathSum(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    var_0 = module_0.pathSum(bool_0, bool_0)
    assert var_0 == 0
    tree_node_0 = module_0.TreeNode(bool_0, var_0, var_0)
    assert tree_node_0.left == 0
    assert tree_node_0.right == 0
    tuple_0 = (bool_0,)
    tree_node_1 = module_0.TreeNode(left=tuple_0)
    assert tree_node_1.val == 0
    module_0.pathSum(tree_node_1, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    tree_node_0 = module_0.TreeNode(right=bool_0)
    assert tree_node_0.val == 0
    module_0.pathSum(tree_node_0, bool_0)


def test_case_3():
    int_0 = 3566
    tree_node_0 = module_0.TreeNode(right=int_0)
    assert tree_node_0.val == 0


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    tree_node_0 = module_0.TreeNode(bool_0)
    var_0 = module_0.pathSum(tree_node_0, bool_0)
    assert var_0 == 1
    list_0 = []
    tree_node_1 = module_0.TreeNode(var_0, list_0)
    assert tree_node_1.val == 1
    int_0 = 1974
    module_0.pathSum(int_0, int_0)
