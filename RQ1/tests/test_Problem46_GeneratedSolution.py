# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import Problem46_GeneratedSolution as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    int_0 = -836
    dict_0 = {tuple_0: tuple_0, int_0: tuple_0}
    module_0.increasingTriplet(dict_0)


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.increasingTriplet(tuple_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = -1946.6
    module_0.increasingTriplet(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    list_0 = [bool_0]
    none_type_0 = None
    var_0 = module_0.increasingTriplet(list_0)
    assert var_0 is False
    module_0.increasingTriplet(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"Y&\x8f\xe5\x0b\xd9"
    var_0 = module_0.increasingTriplet(bytes_0)
    assert var_0 is True
    module_0.increasingTriplet(var_0)
