# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import Problem5_GeneratedSolution as module_0


def test_case_0():
    bytes_0 = b"\xc4\x8e\xa7g"
    bool_0 = module_0.isMatch(bytes_0, bytes_0)
    assert bool_0 is True
    str_0 = "8\\G&"
    bool_1 = module_0.isMatch(str_0, bytes_0)
    assert bool_1 is False


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    str_0 = "=4pKT1_Dg|]Zf!"
    bool_0 = module_0.isMatch(set_0, str_0)
    assert bool_0 is False
    module_0.isMatch(str_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "N3K/&O"
    bool_0 = False
    module_0.isMatch(str_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "$,0Ff#Z%|p"
    bool_0 = module_0.isMatch(str_0, str_0)
    assert bool_0 is True
    str_1 = 'La5&"rtc`i'
    str_2 = "LUP\x0b&zH6.5F$}2U"
    str_3 = "^Crm  ZIKeh*6cR\\hrN"
    bool_1 = module_0.isMatch(str_2, str_3)
    assert bool_1 is False
    bool_2 = module_0.isMatch(str_1, str_2)
    none_type_0 = None
    module_0.isMatch(none_type_0, str_2)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "QbpF/:$1G"
    str_1 = "@\n#]I? i=#"
    bool_0 = module_0.isMatch(str_0, str_1)
    assert bool_0 is False
    set_0 = set()
    str_2 = "&`T[dr\x0b"
    str_3 = "7\r\t{,[SWMx"
    dict_0 = {bool_0: str_1, str_2: bool_0, str_1: str_3, bool_0: str_1}
    tuple_0 = (bool_0, bool_0, dict_0)
    bool_1 = module_0.isMatch(tuple_0, set_0)
    assert bool_1 is False
    bool_2 = module_0.isMatch(str_3, set_0)
    bool_3 = module_0.isMatch(set_0, str_2)
    assert bool_3 is False
    module_0.isMatch(bool_3, str_3)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "NIP/$+\x0clU\\*F--_\\jX"
    bool_0 = module_0.isMatch(str_0, str_0)
    assert bool_0 is True
    float_0 = -54.93585
    str_1 = "\rh9"
    module_0.isMatch(float_0, str_1)
